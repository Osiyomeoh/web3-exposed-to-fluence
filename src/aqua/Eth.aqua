import "./types.aqua"

service Eth("Eth"):
    getMetaInformation() -> EthMetaInformation
    getHashrate() -> u64
    getCoinbase() -> string
    getGasPrice() -> string
    getFeeHistory(blockCount: u64, newestBlock: u64, rewardPercentiles: []u64) -> FeeHistory
    getAccounts() -> []string
    getBlockNumber() -> u64
    getBalance(address: string, defaultBlock: ?string) -> string
    getStorageAt(address: string, position: string, defaultBlock: ?string) -> string
    getCode(address: string, defaultBlock: ?string) -> string
    getBlock(blockHashOrBlockNumber: string) -> Block
    getBlockTransactionCount(blockHashOrBlockNumber: string) -> u64
    getBlockUncleCount(blockHashOrBlockNumber: string) -> u64
    getUncle(blockHashOrBlockNumber: string, uncleIndex: u64) -> ?Block
    getTransaction(transactionHash: string) -> Transaction
    getPendingTransactions() -> []Transaction
    getTransactionFromBlock(hashString: string, indexNumber: u64) -> Transaction
    getTransactionReceipt(hash: string) -> ENSReceipt
    getTransactionCount(address: string, defaultBlock: ?string) -> u64
    sendTransaction(transactionObject: SendTransaction) -> string
    sendSignedTransaction(signedTransactionData: string) -> string
    sign(dataToSign: string, address: string) -> string
    signTransaction(transactionObject: SendTransaction, address: string) -> SignedTransaction
    call(callObject: SendTransaction, defaultBlock: ?string) -> string
    estimateGas(callObject: SendTransaction) -> u64
    getPastLogs(options: PastLogsOptions) -> []PastLogs
    getWork() -> []string
    submitWork(nonce: string, powHash: string, digest: string) -> bool
    getChainId() -> u64
    getNodeInfo() -> string
    getProof(address: string, storageKey: []string, blockNumber: string) -> Proof
    getId() -> u64
    isListening() -> bool
    getPeerCount() -> u64
