/**
 *
 * This file is auto-generated. Do not edit manually: changes may be erased.
 * Generated by Aqua compiler: https://github.com/fluencelabs/aqua/.
 * If you find any bugs, please write an issue on GitHub: https://github.com/fluencelabs/aqua/issues
 * Aqua version: 0.5.0-247
 *
 */
import { Fluence, FluencePeer } from '@fluencelabs/fluence';
import {
    CallParams,
    callFunction,
    registerService,
} from '@fluencelabs/fluence/dist/internal/compilerSupport/v2';


// Services

export interface PersonalDef {
    ecRecover: (dataThatWasSigned: string, signature: string, callParams: CallParams<'dataThatWasSigned' | 'signature'>) => string | Promise<string>;
    getAccounts: (callParams: CallParams<null>) => string[] | Promise<string[]>;
    importRawKey: (privateKey: string, password: string, callParams: CallParams<'privateKey' | 'password'>) => string | Promise<string>;
    lockAccount: (address: string, callParams: CallParams<'address'>) => boolean | Promise<boolean>;
    newAccount: (password: string, callParams: CallParams<'password'>) => string | Promise<string>;
    sendTransaction: (transactionOptions: { chain: string | null; chainId: number | null; common: { baseChain: string | null; customChain: { chainId: number; name: string | null; networkId: number; }; hardfork: string | null; } | null; data: string | null; from: string | null; gas: number | null; gasPrice: number | null; hardfork: string | null; nonce: number | null; to: string | null; value: string | null; }, password: string, callParams: CallParams<'transactionOptions' | 'password'>) => string | Promise<string>;
    sign: (dataToSign: string, address: string, password: string, callParams: CallParams<'dataToSign' | 'address' | 'password'>) => string | Promise<string>;
    signTransaction: (transaction: { accessList: string[] | null; chain: string | null; common: { baseChain: string | null; customChain: { chainId: number; name: string | null; networkId: number; }; hardfork: string | null; }; data: string | null; from: string; gas: number | null; gasPrice: string | null; hardfork: string | null; maxFeePerGas: string | null; maxPriorityFeePerGas: string | null; nonce: number | null; to: string | null; type: string | null; value: string | null; }, password: string, callParams: CallParams<'transaction' | 'password'>) => { raw: string; tx: { gas: string; gasPrice: string; hash: string; input: string; nonce: string; r: string; s: string; to: string; v: string; value: string; }; } | Promise<{ raw: string; tx: { gas: string; gasPrice: string; hash: string; input: string; nonce: string; r: string; s: string; to: string; v: string; value: string; }; }>;
    unlockAccount: (address: string, password: string, unlockDuration: number, callParams: CallParams<'address' | 'password' | 'unlockDuration'>) => boolean | Promise<boolean>;
}
export function registerPersonal(service: PersonalDef): void;
export function registerPersonal(serviceId: string, service: PersonalDef): void;
export function registerPersonal(peer: FluencePeer, service: PersonalDef): void;
export function registerPersonal(peer: FluencePeer, serviceId: string, service: PersonalDef): void;
       

export function registerPersonal(...args: any) {
    registerService(
        args,
        {
    "defaultServiceId" : "Personal",
    "functions" : [
        {
            "functionName" : "ecRecover",
            "argDefs" : [
                {
                    "name" : "dataThatWasSigned",
                    "argType" : {
                        "tag" : "primitive"
                    }
                },
                {
                    "name" : "signature",
                    "argType" : {
                        "tag" : "primitive"
                    }
                }
            ],
            "returnType" : {
                "tag" : "primitive"
            }
        },
        {
            "functionName" : "getAccounts",
            "argDefs" : [
            ],
            "returnType" : {
                "tag" : "primitive"
            }
        },
        {
            "functionName" : "importRawKey",
            "argDefs" : [
                {
                    "name" : "privateKey",
                    "argType" : {
                        "tag" : "primitive"
                    }
                },
                {
                    "name" : "password",
                    "argType" : {
                        "tag" : "primitive"
                    }
                }
            ],
            "returnType" : {
                "tag" : "primitive"
            }
        },
        {
            "functionName" : "lockAccount",
            "argDefs" : [
                {
                    "name" : "address",
                    "argType" : {
                        "tag" : "primitive"
                    }
                }
            ],
            "returnType" : {
                "tag" : "primitive"
            }
        },
        {
            "functionName" : "newAccount",
            "argDefs" : [
                {
                    "name" : "password",
                    "argType" : {
                        "tag" : "primitive"
                    }
                }
            ],
            "returnType" : {
                "tag" : "primitive"
            }
        },
        {
            "functionName" : "sendTransaction",
            "argDefs" : [
                {
                    "name" : "transactionOptions",
                    "argType" : {
                        "tag" : "primitive"
                    }
                },
                {
                    "name" : "password",
                    "argType" : {
                        "tag" : "primitive"
                    }
                }
            ],
            "returnType" : {
                "tag" : "primitive"
            }
        },
        {
            "functionName" : "sign",
            "argDefs" : [
                {
                    "name" : "dataToSign",
                    "argType" : {
                        "tag" : "primitive"
                    }
                },
                {
                    "name" : "address",
                    "argType" : {
                        "tag" : "primitive"
                    }
                },
                {
                    "name" : "password",
                    "argType" : {
                        "tag" : "primitive"
                    }
                }
            ],
            "returnType" : {
                "tag" : "primitive"
            }
        },
        {
            "functionName" : "signTransaction",
            "argDefs" : [
                {
                    "name" : "transaction",
                    "argType" : {
                        "tag" : "primitive"
                    }
                },
                {
                    "name" : "password",
                    "argType" : {
                        "tag" : "primitive"
                    }
                }
            ],
            "returnType" : {
                "tag" : "primitive"
            }
        },
        {
            "functionName" : "unlockAccount",
            "argDefs" : [
                {
                    "name" : "address",
                    "argType" : {
                        "tag" : "primitive"
                    }
                },
                {
                    "name" : "password",
                    "argType" : {
                        "tag" : "primitive"
                    }
                },
                {
                    "name" : "unlockDuration",
                    "argType" : {
                        "tag" : "primitive"
                    }
                }
            ],
            "returnType" : {
                "tag" : "primitive"
            }
        }
    ]
}
    );
}
      
// Functions

