/**
 *
 * This file is auto-generated. Do not edit manually: changes may be erased.
 * Generated by Aqua compiler: https://github.com/fluencelabs/aqua/.
 * If you find any bugs, please write an issue on GitHub: https://github.com/fluencelabs/aqua/issues
 * Aqua version: 0.5.0-247
 *
 */
import { Fluence, FluencePeer } from '@fluencelabs/fluence';
import {
    CallParams,
    callFunction,
    registerService,
} from '@fluencelabs/fluence/dist/internal/compilerSupport/v2';


// Services

export interface ContractDef {
    deployEncodeABI: (jsonInterface: { anonymous: boolean | null; constant: boolean | null; gas: number | null; inputs: { indexed: boolean | null; internalType: string | null; name: string; type: string; }[] | null; name: string | null; outputs: { internalType: string | null; name: string; type: string; }[] | null; payable: boolean | null; stateMutability: string | null; type: string; }[], address: string | null, options: { data: string | null; from: string | null; gas: number | null; gasPrice: string | null; } | null, deployOptions: { arguments: string[] | null; data: string; }, callParams: CallParams<'jsonInterface' | 'address' | 'options' | 'deployOptions'>) => string | Promise<string>;
    deployEstimateGas: (jsonInterface: { anonymous: boolean | null; constant: boolean | null; gas: number | null; inputs: { indexed: boolean | null; internalType: string | null; name: string; type: string; }[] | null; name: string | null; outputs: { internalType: string | null; name: string; type: string; }[] | null; payable: boolean | null; stateMutability: string | null; type: string; }[], address: string | null, options: { data: string | null; from: string | null; gas: number | null; gasPrice: string | null; } | null, deployOptions: { arguments: string[] | null; data: string; }, gasOption: { from: string | null; gas: number | null; value: string | null; } | null, callParams: CallParams<'jsonInterface' | 'address' | 'options' | 'deployOptions' | 'gasOption'>) => number | Promise<number>;
    deploySend: (jsonInterface: { anonymous: boolean | null; constant: boolean | null; gas: number | null; inputs: { indexed: boolean | null; internalType: string | null; name: string; type: string; }[] | null; name: string | null; outputs: { internalType: string | null; name: string; type: string; }[] | null; payable: boolean | null; stateMutability: string | null; type: string; }[], address: string | null, options: { data: string | null; from: string | null; gas: number | null; gasPrice: string | null; } | null, deployOptions: { arguments: string[] | null; data: string; }, sendOptions: { from: string; gas: number | null; gasPrice: string | null; nonce: number | null; value: string | null; }, callParams: CallParams<'jsonInterface' | 'address' | 'options' | 'deployOptions' | 'sendOptions'>) => string | Promise<string>;
    getAllEvents: (jsonInterface: { anonymous: boolean | null; constant: boolean | null; gas: number | null; inputs: { indexed: boolean | null; internalType: string | null; name: string; type: string; }[] | null; name: string | null; outputs: { internalType: string | null; name: string; type: string; }[] | null; payable: boolean | null; stateMutability: string | null; type: string; }[], address: string | null, options: { data: string | null; from: string | null; gas: number | null; gasPrice: string | null; } | null, eventOptions: { filter: string | null; fromBlock: string | null; toBlock: string | null; topics: string[] | null; } | null, callParams: CallParams<'jsonInterface' | 'address' | 'options' | 'eventOptions'>) => { address: string; blockHash: string | null; blockNumber: number | null; event: string; logIndex: number; raw: { data: string; topics: string[]; }; returnValues: string; signature: string | null; transactionHash: string; transactionIndex: number; }[] | Promise<{ address: string; blockHash: string | null; blockNumber: number | null; event: string; logIndex: number; raw: { data: string; topics: string[]; }; returnValues: string; signature: string | null; transactionHash: string; transactionIndex: number; }[]>;
    getPastEvents: (jsonInterface: { anonymous: boolean | null; constant: boolean | null; gas: number | null; inputs: { indexed: boolean | null; internalType: string | null; name: string; type: string; }[] | null; name: string | null; outputs: { internalType: string | null; name: string; type: string; }[] | null; payable: boolean | null; stateMutability: string | null; type: string; }[], address: string | null, options: { data: string | null; from: string | null; gas: number | null; gasPrice: string | null; } | null, event: string, eventOptions: { filter: string | null; fromBlock: string | null; toBlock: string | null; topics: string[] | null; } | null, callParams: CallParams<'jsonInterface' | 'address' | 'options' | 'event' | 'eventOptions'>) => { address: string; blockHash: string | null; blockNumber: number | null; event: string; logIndex: number; raw: { data: string; topics: string[]; }; returnValues: string; signature: string | null; transactionHash: string; transactionIndex: number; }[] | Promise<{ address: string; blockHash: string | null; blockNumber: number | null; event: string; logIndex: number; raw: { data: string; topics: string[]; }; returnValues: string; signature: string | null; transactionHash: string; transactionIndex: number; }[]>;
    methodCall: (jsonInterface: { anonymous: boolean | null; constant: boolean | null; gas: number | null; inputs: { indexed: boolean | null; internalType: string | null; name: string; type: string; }[] | null; name: string | null; outputs: { internalType: string | null; name: string; type: string; }[] | null; payable: boolean | null; stateMutability: string | null; type: string; }[], address: string | null, options: { data: string | null; from: string | null; gas: number | null; gasPrice: string | null; } | null, methodName: string, parameters: string, callOptions: { from: string | null; gas: number | null; gasPrice: string | null; } | null, callParams: CallParams<'jsonInterface' | 'address' | 'options' | 'methodName' | 'parameters' | 'callOptions'>) => string | Promise<string>;
    methodEncodeABI: (jsonInterface: { anonymous: boolean | null; constant: boolean | null; gas: number | null; inputs: { indexed: boolean | null; internalType: string | null; name: string; type: string; }[] | null; name: string | null; outputs: { internalType: string | null; name: string; type: string; }[] | null; payable: boolean | null; stateMutability: string | null; type: string; }[], address: string | null, options: { data: string | null; from: string | null; gas: number | null; gasPrice: string | null; } | null, methodName: string, parameters: string, callParams: CallParams<'jsonInterface' | 'address' | 'options' | 'methodName' | 'parameters'>) => string | Promise<string>;
    methodEstimateGas: (jsonInterface: { anonymous: boolean | null; constant: boolean | null; gas: number | null; inputs: { indexed: boolean | null; internalType: string | null; name: string; type: string; }[] | null; name: string | null; outputs: { internalType: string | null; name: string; type: string; }[] | null; payable: boolean | null; stateMutability: string | null; type: string; }[], address: string | null, options: { data: string | null; from: string | null; gas: number | null; gasPrice: string | null; } | null, methodName: string, parameters: string, estimateGasOptions: { from: string | null; gas: number | null; value: string | null; } | null, callParams: CallParams<'jsonInterface' | 'address' | 'options' | 'methodName' | 'parameters' | 'estimateGasOptions'>) => number | Promise<number>;
    methodSend: (jsonInterface: { anonymous: boolean | null; constant: boolean | null; gas: number | null; inputs: { indexed: boolean | null; internalType: string | null; name: string; type: string; }[] | null; name: string | null; outputs: { internalType: string | null; name: string; type: string; }[] | null; payable: boolean | null; stateMutability: string | null; type: string; }[], address: string | null, options: { data: string | null; from: string | null; gas: number | null; gasPrice: string | null; } | null, methodName: string, parameters: string, sendOptions: { from: string; gas: number | null; gasPrice: string | null; nonce: number | null; value: string | null; }, callParams: CallParams<'jsonInterface' | 'address' | 'options' | 'methodName' | 'parameters' | 'sendOptions'>) => string | Promise<string>;
}
export function registerContract(service: ContractDef): void;
export function registerContract(serviceId: string, service: ContractDef): void;
export function registerContract(peer: FluencePeer, service: ContractDef): void;
export function registerContract(peer: FluencePeer, serviceId: string, service: ContractDef): void;
       

export function registerContract(...args: any) {
    registerService(
        args,
        {
    "defaultServiceId" : "Contract",
    "functions" : [
        {
            "functionName" : "deployEncodeABI",
            "argDefs" : [
                {
                    "name" : "jsonInterface",
                    "argType" : {
                        "tag" : "primitive"
                    }
                },
                {
                    "name" : "address",
                    "argType" : {
                        "tag" : "optional"
                    }
                },
                {
                    "name" : "options",
                    "argType" : {
                        "tag" : "optional"
                    }
                },
                {
                    "name" : "deployOptions",
                    "argType" : {
                        "tag" : "primitive"
                    }
                }
            ],
            "returnType" : {
                "tag" : "primitive"
            }
        },
        {
            "functionName" : "deployEstimateGas",
            "argDefs" : [
                {
                    "name" : "jsonInterface",
                    "argType" : {
                        "tag" : "primitive"
                    }
                },
                {
                    "name" : "address",
                    "argType" : {
                        "tag" : "optional"
                    }
                },
                {
                    "name" : "options",
                    "argType" : {
                        "tag" : "optional"
                    }
                },
                {
                    "name" : "deployOptions",
                    "argType" : {
                        "tag" : "primitive"
                    }
                },
                {
                    "name" : "gasOption",
                    "argType" : {
                        "tag" : "optional"
                    }
                }
            ],
            "returnType" : {
                "tag" : "primitive"
            }
        },
        {
            "functionName" : "deploySend",
            "argDefs" : [
                {
                    "name" : "jsonInterface",
                    "argType" : {
                        "tag" : "primitive"
                    }
                },
                {
                    "name" : "address",
                    "argType" : {
                        "tag" : "optional"
                    }
                },
                {
                    "name" : "options",
                    "argType" : {
                        "tag" : "optional"
                    }
                },
                {
                    "name" : "deployOptions",
                    "argType" : {
                        "tag" : "primitive"
                    }
                },
                {
                    "name" : "sendOptions",
                    "argType" : {
                        "tag" : "primitive"
                    }
                }
            ],
            "returnType" : {
                "tag" : "primitive"
            }
        },
        {
            "functionName" : "getAllEvents",
            "argDefs" : [
                {
                    "name" : "jsonInterface",
                    "argType" : {
                        "tag" : "primitive"
                    }
                },
                {
                    "name" : "address",
                    "argType" : {
                        "tag" : "optional"
                    }
                },
                {
                    "name" : "options",
                    "argType" : {
                        "tag" : "optional"
                    }
                },
                {
                    "name" : "eventOptions",
                    "argType" : {
                        "tag" : "optional"
                    }
                }
            ],
            "returnType" : {
                "tag" : "primitive"
            }
        },
        {
            "functionName" : "getPastEvents",
            "argDefs" : [
                {
                    "name" : "jsonInterface",
                    "argType" : {
                        "tag" : "primitive"
                    }
                },
                {
                    "name" : "address",
                    "argType" : {
                        "tag" : "optional"
                    }
                },
                {
                    "name" : "options",
                    "argType" : {
                        "tag" : "optional"
                    }
                },
                {
                    "name" : "event",
                    "argType" : {
                        "tag" : "primitive"
                    }
                },
                {
                    "name" : "eventOptions",
                    "argType" : {
                        "tag" : "optional"
                    }
                }
            ],
            "returnType" : {
                "tag" : "primitive"
            }
        },
        {
            "functionName" : "methodCall",
            "argDefs" : [
                {
                    "name" : "jsonInterface",
                    "argType" : {
                        "tag" : "primitive"
                    }
                },
                {
                    "name" : "address",
                    "argType" : {
                        "tag" : "optional"
                    }
                },
                {
                    "name" : "options",
                    "argType" : {
                        "tag" : "optional"
                    }
                },
                {
                    "name" : "methodName",
                    "argType" : {
                        "tag" : "primitive"
                    }
                },
                {
                    "name" : "parameters",
                    "argType" : {
                        "tag" : "primitive"
                    }
                },
                {
                    "name" : "callOptions",
                    "argType" : {
                        "tag" : "optional"
                    }
                }
            ],
            "returnType" : {
                "tag" : "primitive"
            }
        },
        {
            "functionName" : "methodEncodeABI",
            "argDefs" : [
                {
                    "name" : "jsonInterface",
                    "argType" : {
                        "tag" : "primitive"
                    }
                },
                {
                    "name" : "address",
                    "argType" : {
                        "tag" : "optional"
                    }
                },
                {
                    "name" : "options",
                    "argType" : {
                        "tag" : "optional"
                    }
                },
                {
                    "name" : "methodName",
                    "argType" : {
                        "tag" : "primitive"
                    }
                },
                {
                    "name" : "parameters",
                    "argType" : {
                        "tag" : "primitive"
                    }
                }
            ],
            "returnType" : {
                "tag" : "primitive"
            }
        },
        {
            "functionName" : "methodEstimateGas",
            "argDefs" : [
                {
                    "name" : "jsonInterface",
                    "argType" : {
                        "tag" : "primitive"
                    }
                },
                {
                    "name" : "address",
                    "argType" : {
                        "tag" : "optional"
                    }
                },
                {
                    "name" : "options",
                    "argType" : {
                        "tag" : "optional"
                    }
                },
                {
                    "name" : "methodName",
                    "argType" : {
                        "tag" : "primitive"
                    }
                },
                {
                    "name" : "parameters",
                    "argType" : {
                        "tag" : "primitive"
                    }
                },
                {
                    "name" : "estimateGasOptions",
                    "argType" : {
                        "tag" : "optional"
                    }
                }
            ],
            "returnType" : {
                "tag" : "primitive"
            }
        },
        {
            "functionName" : "methodSend",
            "argDefs" : [
                {
                    "name" : "jsonInterface",
                    "argType" : {
                        "tag" : "primitive"
                    }
                },
                {
                    "name" : "address",
                    "argType" : {
                        "tag" : "optional"
                    }
                },
                {
                    "name" : "options",
                    "argType" : {
                        "tag" : "optional"
                    }
                },
                {
                    "name" : "methodName",
                    "argType" : {
                        "tag" : "primitive"
                    }
                },
                {
                    "name" : "parameters",
                    "argType" : {
                        "tag" : "primitive"
                    }
                },
                {
                    "name" : "sendOptions",
                    "argType" : {
                        "tag" : "primitive"
                    }
                }
            ],
            "returnType" : {
                "tag" : "primitive"
            }
        }
    ]
}
    );
}
      
// Functions

