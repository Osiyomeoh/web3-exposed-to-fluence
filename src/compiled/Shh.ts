/**
 *
 * This file is auto-generated. Do not edit manually: changes may be erased.
 * Generated by Aqua compiler: https://github.com/fluencelabs/aqua/.
 * If you find any bugs, please write an issue on GitHub: https://github.com/fluencelabs/aqua/issues
 * Aqua version: 0.5.0-247
 *
 */
import { Fluence, FluencePeer } from '@fluencelabs/fluence';
import {
    CallParams,
    callFunction,
    registerService,
} from '@fluencelabs/fluence/dist/internal/compilerSupport/v2';


// Services

export interface ShhDef {
    addPrivateKey: (privateKey: string, callParams: CallParams<'privateKey'>) => string | Promise<string>;
    addSymKey: (symKey: string, callParams: CallParams<'symKey'>) => string | Promise<string>;
    deleteKeyPair: (id: string, callParams: CallParams<'id'>) => boolean | Promise<boolean>;
    deleteMessageFilter: (id: string, callParams: CallParams<'id'>) => boolean | Promise<boolean>;
    deleteSymKey: (id: string, callParams: CallParams<'id'>) => boolean | Promise<boolean>;
    generateSymKeyFromPassword: (password: string, callParams: CallParams<'password'>) => string | null | Promise<string | null>;
    getFilterMessage: (id: string, callParams: CallParams<'id'>) => { hash: string; padding: number; payload: string; pow: number; recipientPublicKey: string; sig: string; timestamp: string; topic: string; ttl: number; }[] | Promise<{ hash: string; padding: number; payload: string; pow: number; recipientPublicKey: string; sig: string; timestamp: string; topic: string; ttl: number; }[]>;
    getId: (callParams: CallParams<null>) => number | Promise<number>;
    getInfo: (callParams: CallParams<null>) => { maxMessageSize: number; memory: number; messages: number; minPow: number; } | Promise<{ maxMessageSize: number; memory: number; messages: number; minPow: number; }>;
    getPeerCount: (callParams: CallParams<null>) => number | Promise<number>;
    getPrivateKey: (id: string, callParams: CallParams<'id'>) => string | Promise<string>;
    getPublicKey: (id: string, callParams: CallParams<'id'>) => string | Promise<string>;
    getSymKey: (id: string, callParams: CallParams<'id'>) => string | Promise<string>;
    getVersion: (callParams: CallParams<null>) => string | Promise<string>;
    hasKeyPair: (id: string, callParams: CallParams<'id'>) => boolean | Promise<boolean>;
    hasSymKey: (id: string, callParams: CallParams<'id'>) => boolean | Promise<boolean>;
    isListening: (callParams: CallParams<null>) => boolean | Promise<boolean>;
    markTrustedPeer: (enode: string, callParams: CallParams<'enode'>) => boolean | Promise<boolean>;
    newKeyPair: (callParams: CallParams<null>) => string | Promise<string>;
    newMessageFilter: (options: { allowP2P: boolean | null; minPow: number | null; privateKeyID: string; sig: string | null; symKeyID: string; topics: string[]; }, callParams: CallParams<'options'>) => string | Promise<string>;
    newSymKey: (callParams: CallParams<null>) => string | Promise<string>;
    post: (object: { padding: number | null; payload: string; powTarget: number | null; powTime: number | null; pubKey: string | null; sig: string | null; symKeyID: string | null; targetPeer: number | null; topic: string; ttl: number; }, callParams: CallParams<'object'>) => string | Promise<string>;
    setMaxMessageSize: (size: number, callParams: CallParams<'size'>) => boolean | Promise<boolean>;
    setMinPoW: (pow: number, callParams: CallParams<'pow'>) => boolean | Promise<boolean>;
}
export function registerShh(service: ShhDef): void;
export function registerShh(serviceId: string, service: ShhDef): void;
export function registerShh(peer: FluencePeer, service: ShhDef): void;
export function registerShh(peer: FluencePeer, serviceId: string, service: ShhDef): void;
       

export function registerShh(...args: any) {
    registerService(
        args,
        {
    "defaultServiceId" : "Shh",
    "functions" : [
        {
            "functionName" : "addPrivateKey",
            "argDefs" : [
                {
                    "name" : "privateKey",
                    "argType" : {
                        "tag" : "primitive"
                    }
                }
            ],
            "returnType" : {
                "tag" : "primitive"
            }
        },
        {
            "functionName" : "addSymKey",
            "argDefs" : [
                {
                    "name" : "symKey",
                    "argType" : {
                        "tag" : "primitive"
                    }
                }
            ],
            "returnType" : {
                "tag" : "primitive"
            }
        },
        {
            "functionName" : "deleteKeyPair",
            "argDefs" : [
                {
                    "name" : "id",
                    "argType" : {
                        "tag" : "primitive"
                    }
                }
            ],
            "returnType" : {
                "tag" : "primitive"
            }
        },
        {
            "functionName" : "deleteMessageFilter",
            "argDefs" : [
                {
                    "name" : "id",
                    "argType" : {
                        "tag" : "primitive"
                    }
                }
            ],
            "returnType" : {
                "tag" : "primitive"
            }
        },
        {
            "functionName" : "deleteSymKey",
            "argDefs" : [
                {
                    "name" : "id",
                    "argType" : {
                        "tag" : "primitive"
                    }
                }
            ],
            "returnType" : {
                "tag" : "primitive"
            }
        },
        {
            "functionName" : "generateSymKeyFromPassword",
            "argDefs" : [
                {
                    "name" : "password",
                    "argType" : {
                        "tag" : "primitive"
                    }
                }
            ],
            "returnType" : {
                "tag" : "optional"
            }
        },
        {
            "functionName" : "getFilterMessage",
            "argDefs" : [
                {
                    "name" : "id",
                    "argType" : {
                        "tag" : "primitive"
                    }
                }
            ],
            "returnType" : {
                "tag" : "primitive"
            }
        },
        {
            "functionName" : "getId",
            "argDefs" : [
            ],
            "returnType" : {
                "tag" : "primitive"
            }
        },
        {
            "functionName" : "getInfo",
            "argDefs" : [
            ],
            "returnType" : {
                "tag" : "primitive"
            }
        },
        {
            "functionName" : "getPeerCount",
            "argDefs" : [
            ],
            "returnType" : {
                "tag" : "primitive"
            }
        },
        {
            "functionName" : "getPrivateKey",
            "argDefs" : [
                {
                    "name" : "id",
                    "argType" : {
                        "tag" : "primitive"
                    }
                }
            ],
            "returnType" : {
                "tag" : "primitive"
            }
        },
        {
            "functionName" : "getPublicKey",
            "argDefs" : [
                {
                    "name" : "id",
                    "argType" : {
                        "tag" : "primitive"
                    }
                }
            ],
            "returnType" : {
                "tag" : "primitive"
            }
        },
        {
            "functionName" : "getSymKey",
            "argDefs" : [
                {
                    "name" : "id",
                    "argType" : {
                        "tag" : "primitive"
                    }
                }
            ],
            "returnType" : {
                "tag" : "primitive"
            }
        },
        {
            "functionName" : "getVersion",
            "argDefs" : [
            ],
            "returnType" : {
                "tag" : "primitive"
            }
        },
        {
            "functionName" : "hasKeyPair",
            "argDefs" : [
                {
                    "name" : "id",
                    "argType" : {
                        "tag" : "primitive"
                    }
                }
            ],
            "returnType" : {
                "tag" : "primitive"
            }
        },
        {
            "functionName" : "hasSymKey",
            "argDefs" : [
                {
                    "name" : "id",
                    "argType" : {
                        "tag" : "primitive"
                    }
                }
            ],
            "returnType" : {
                "tag" : "primitive"
            }
        },
        {
            "functionName" : "isListening",
            "argDefs" : [
            ],
            "returnType" : {
                "tag" : "primitive"
            }
        },
        {
            "functionName" : "markTrustedPeer",
            "argDefs" : [
                {
                    "name" : "enode",
                    "argType" : {
                        "tag" : "primitive"
                    }
                }
            ],
            "returnType" : {
                "tag" : "primitive"
            }
        },
        {
            "functionName" : "newKeyPair",
            "argDefs" : [
            ],
            "returnType" : {
                "tag" : "primitive"
            }
        },
        {
            "functionName" : "newMessageFilter",
            "argDefs" : [
                {
                    "name" : "options",
                    "argType" : {
                        "tag" : "primitive"
                    }
                }
            ],
            "returnType" : {
                "tag" : "primitive"
            }
        },
        {
            "functionName" : "newSymKey",
            "argDefs" : [
            ],
            "returnType" : {
                "tag" : "primitive"
            }
        },
        {
            "functionName" : "post",
            "argDefs" : [
                {
                    "name" : "object",
                    "argType" : {
                        "tag" : "primitive"
                    }
                }
            ],
            "returnType" : {
                "tag" : "primitive"
            }
        },
        {
            "functionName" : "setMaxMessageSize",
            "argDefs" : [
                {
                    "name" : "size",
                    "argType" : {
                        "tag" : "primitive"
                    }
                }
            ],
            "returnType" : {
                "tag" : "primitive"
            }
        },
        {
            "functionName" : "setMinPoW",
            "argDefs" : [
                {
                    "name" : "pow",
                    "argType" : {
                        "tag" : "primitive"
                    }
                }
            ],
            "returnType" : {
                "tag" : "primitive"
            }
        }
    ]
}
    );
}
      
// Functions

