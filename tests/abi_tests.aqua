import "./address.aqua"
import "../src/aqua/types.aqua"
import "../src/aqua/Convert.aqua"
import "../src/aqua/Abi.aqua"

func demoEncodeFunctionSignature() -> string:
    on PEER via RELAY:
        res <- Abi.encodeFunctionSignature("myMethod(uint256,string)")
    <- res

func demoEncodeEventSignature() -> string:
    on PEER via RELAY:
        res <- Abi.encodeEventSignature("myEvent(uint256,bytes32)")
    <- res

func demoEncodeParameter() -> string:
    on PEER via RELAY:
        res <- Abi.encodeParameter("uint256", "2345675643")
    <- res

func demoEncodeParameters() -> string:
    on PEER via RELAY:
        typeArray <- Convert.toStringArray("['uint256','string']")
        parameters <- Convert.toStringArray("['2345675643', 'Hello!%']")
        res <- Abi.encodeParameters(typeArray, parameters)
    <- res

func demoEncodeFunctionCall() -> string:
    on PEER via RELAY:
        jsonInterface <- Convert.getEncodeFunctionCallJSONInterface()
        parameters <- Convert.toStringArray("['2345675643', 'Hello!%']")
        res <- Abi.encodeFunctionCall(jsonInterface, parameters)
    <- res

func demoDecodeParameter() -> StringObject:
    on PEER via RELAY:
        res <- Abi.decodeParameter("uint256", "0x0000000000000000000000000000000000000000000000000000000000000010")
    <- res

func demoDecodeParameters() -> StringObject:
    on PEER via RELAY:
        typesArray <- Convert.toStringArray("['string', 'uint256']")
        res <- Abi.decodeParameters(typesArray, "0x000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000000ea000000000000000000000000000000000000000000000000000000000000000848656c6c6f212521000000000000000000000000000000000000000000000000")
    <- res

func demoDecodeLog() -> StringObject:
    on PEER via RELAY:
        typesArray <- Convert.getDecodeLogArray()
        topics <- Convert.toStringArray("['0x000000000000000000000000000000000000000000000000000000000000f310', '0x0000000000000000000000000000000000000000000000000000000000000010']")
        res <- Abi.decodeLog(typesArray, "0x0000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000000748656c6c6f252100000000000000000000000000000000000000000000000000", topics)
    <- res
